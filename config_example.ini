# TG Forwarder 配置文件示例
# 注意：实际应用中应使用JSON格式的配置文件，此INI文件仅作为参考

[telegram]
# Telegram API凭据（必须）
# 从 https://my.telegram.org/apps 获取
api_id = 12345678
api_hash = abcdef1234567890abcdef1234567890
# 会话名称，用于保存登录状态
session_name = tg_forwarder
# 代理设置（可选）
use_proxy = false
proxy_type = socks5
proxy_host = 127.0.0.1
proxy_port = 1080
proxy_username = 
proxy_password = 
# 连接设置
connection_retries = 5
retry_delay = 2
# 自动重连设置
auto_reconnect = true
# 设备信息
device_model = TG Forwarder
system_version = 1.0
app_version = 1.0.0

[log]
# 日志设置
file = logs/tg_forwarder.log
level = INFO
# 日志轮转设置
rotation = 10 MB
# 保留的日志文件数量
backup_count = 5
# 是否在控制台显示日志
console = true
# 是否按日期分割日志文件
date_rotation = true

[storage]
# 存储设置
db_path = data/tg_forwarder.db
# 数据库连接超时（秒）
timeout = 30
# 是否启用WAL模式（提高性能）
wal_mode = true
# 数据库备份频率（天）
backup_frequency = 7

[task_manager]
# 任务管理器设置
max_workers = 10
# 队列大小限制
max_queue_size = 1000
# 任务过期时间（小时）
task_expiry = 24
# 默认任务优先级（1-10，10为最高）
default_priority = 5
# 重试失败任务的次数
retry_count = 3
# 重试间隔（秒）
retry_delay = 30

[download]
# 下载设置
directory = downloads
# 是否按频道分类存储文件
organize_by_chat = true
# 临时文件目录
temp_directory = downloads/temp
# 下载超时（秒）
timeout = 300
# 是否跳过已存在的文件
skip_existing = true
# 并行下载数量
parallel_downloads = 3
# 文件名格式
filename_pattern = {chat_id}_{message_id}_{filename}
# 大文件分块大小（字节）
chunk_size = 1048576

[upload]
# 上传设置
# 上传前是否校验文件完整性
verify_before_upload = true
# 上传超时（秒）
timeout = 300
# 是否保留原始文件名
preserve_filenames = true
# 是否包含文件修改时间
preserve_timestamps = true
# 文件上传重试次数
retry_count = 3
# 并行上传数量
parallel_uploads = 2

[forward]
# 转发设置
# 默认转发模式：native(原生转发), download(下载后转发)
default_mode = native
# 是否删除原始字幕
remove_captions = false
# 自定义字幕模板
caption_template = 转自 {source_chat_title}\n原始消息: {message_id}\n日期: {date}
# 是否下载媒体再转发
download_media = true
# 默认媒体类型过滤器，逗号分隔：photo,video,document,audio,voice,sticker,animation
media_types = photo,video,document,audio,animation
# 转发延迟（秒）
forward_delay = 2
# 是否保留媒体组
preserve_media_groups = true
# 转发错误的最大重试次数
max_retries = 3
# 消息过滤器（正则表达式）
message_filter = 
# 是否添加水印
add_watermark = false
# 水印设置
watermark_text = 

[source_channels]
# 源频道列表，格式为 名称=ID 或 名称=用户名
# 例如：
channel1 = -1001234567890
channel2 = @channel_username
# 可以添加多个频道

[target_channels]
# 目标频道列表，格式为 名称=ID 或 名称=用户名
# 例如：
target1 = -1001098765432
target2 = @target_channel
# 可以添加多个频道

[channel_pairs]
# 频道转发对，指定源频道和目标频道的对应关系
# 格式为 源频道ID或用户名=目标频道ID或用户名
# 如果指定了该配置，将优先于全局源频道和目标频道
-1001234567890 = -1001098765432
@channel_username = @target_channel

[channel_config.channel1]
# 特定频道的转发配置覆盖默认设置
# 将"channel1"替换为实际的频道名称或ID
caption_template = From: {source_chat_title}\nID: {message_id}
remove_captions = true
download_media = false
media_types = photo,video

[backup]
# 备份设置
directory = backups
# 是否包含媒体文件
include_media = false
# 自动备份间隔（天）
auto_backup_interval = 7
# 最大备份数量
max_backups = 5
# 备份文件压缩
compress = true
# 压缩格式：zip, tar, gzip
compression_format = zip

[notifications]
# 通知设置
# 是否启用通知
enabled = true
# 通知方式：telegram, email, webhook
method = telegram
# 异常通知，是否在发生错误时发送通知
notify_on_error = true
# 任务完成通知
notify_on_completion = false
# Telegram通知机器人Token
bot_token = 
# Telegram接收通知的用户ID
user_id = 
# 电子邮件设置
email_from = 
email_to = 
email_subject = TG Forwarder 通知
smtp_server = 
smtp_port = 587
smtp_username = 
smtp_password = 
smtp_use_tls = true
# Webhook设置
webhook_url = 
webhook_method = POST
webhook_headers = {"Content-Type": "application/json"}

[ui]
# 用户界面设置（如果有）
theme = light
language = zh_CN
start_minimized = false
show_notifications = true
# 窗口大小
window_width = 1024
window_height = 768
# 是否记住窗口位置
remember_position = true
# 界面刷新频率（毫秒）
refresh_rate = 1000

[advanced]
# 高级设置
debug_mode = false
# 允许使用实验性功能
enable_experimental = false
# 禁用SSL验证（不推荐）
disable_ssl_verification = false
# 网络请求超时（秒）
request_timeout = 60
# 性能配置
# 是否启用内存缓存
enable_cache = true
# 缓存大小限制（MB）
cache_size = 100
# 垃圾回收间隔（秒）
gc_interval = 300
# 进程优先级：low, normal, high
process_priority = normal 